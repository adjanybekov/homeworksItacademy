1.Класс который хранит в себе строки.
Определяется через ключевое слово enum

2. [дни недели]
public enum Day {
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday;
 }
    [регионы]
public enum Region {
	Chuy,
	Osh,
	Talas,
	Jalalabat,
	Issykkol,
	Naryn,
	Batken;
 }
 и enum Colors можно

3. Раньше (до версии 1.5) Java программистам
приходилось создавать final static переменные чтобы
хранить некие постоянные строки (дни недели,
месяцы).
   А сейчас можно использовать Enum класс.

4. Массивы могут быть быстрее и кушать меньше памяти.
Списки теряют в производительности из-за возможности автоматического 
увеличения размера и сопутствующих проверок. Плюс к этому, что размер 
списка увеличивается не на 1, а на большее кол-во элементов (+15)*. 
Так же доступ к [10] в массиве может быть быстрее чем вызов get(10) 
у списка.

ArrayList реализован внутри в виде обычного массива. Поэтому при вставке 
элемента в середину, приходится сначала сдвигать на один все элементы после 
него, а уже затем в освободившееся место вставлять новый элемент. Зато в нем 
быстро реализованы взятие и изменение элемента – операции get, set, так как 
в них мы просто обращаемся к соответствующему элементу массива.

LinkedList реализован внутри по-другому. Он реализован в виде связного списка: 
набора отдельных элементов, каждый из которых хранит ссылку на следующий и 
предыдущий элементы. Чтобы вставить элемент в середину такого списка, достаточно 
поменять ссылки его будущих соседей. А вот чтобы получить элемент с номером 130, 
нужно пройтись последовательно по всем объектам от 0 до 130. Другими словами 
операции set и get тут реализованы очень медленно.

Если необходимо вставлять (или удалять) в середину коллекции много элементов, 
то лучше использовать LinkedList. Во всех остальных случаях – ArrayList.

5. public enum Day {
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday;
}
class Days{
    public String printDayInRussian(Day day){
        switch (day){
            case Monday: return "понедельник";
            case Tuesday: return "вторник";
            case Wednesday: return "среда";
            case Thursday: return "четверг";
            case Friday: return "пятница";
            case Saturday: return "суббота";
            case Sunday: return "воскресенье";
            default: return "it's not Day";
        }
    }
}
